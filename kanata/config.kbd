(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold yes

  macos-dev-names-exclude (
    "Corne"
  )

  linux-dev-names-exclude (
    "Corne Keyboard"
  )

)

(deflocalkeys-linux
  fn 463
)

(defsrc
  esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
  grv   1   2   3   4   5   6   7   8   9   0   -   = del
  tab  q   w   e   r   t   y   u   i   o   p   [   ] \
  caps a   s   d   f   h   j   k   l   ; enter
  lsft z   x   c   v   b   n   m   ,   .  / rsft
  fn lctl lalt lmet spc rmet ralt
)

(defvar
  tap-time 175
  hold-time 210

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )

  right-hand-keys (
    y u i o p
    h j k l ; enter
    n m , . /
  )
)


(defalias
  mwu (mwheel-up 50 120)
  mwd (mwheel-down 50 120)
  mwl (mwheel-left 50 120)
  mwr (mwheel-right 50 120)

  ms↑ (movemouse-up 2 1)
  ms← (movemouse-left 2 1)
  ms↓ (movemouse-down 2 1)
  ms→ (movemouse-right 2 1)

  ma↑ (movemouse-accel-up 1 1000 1 5)
  ma← (movemouse-accel-left 1 1000 1 5) ma↓ (movemouse-accel-down 1 1000 1 5)
  ma→ (movemouse-accel-right 1 1000 1 5)

  sm (setmouse 32228 32228)

  clk (tap-dance 300 (
      mltp
      mrtp
    )
  )

  base (layer-switch base)

  fst (movemouse-speed 300)
)

  (deflayer function
    esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
    grv   1   2   3   4   5   6   7   8   9   0   -   = del
    tab  q   w   e   r   t   y   u   i   o   p   [   ] \
    @cap @a  @s  @d  @f h @j  @k  @l  @; enter
    lsft z x c v b n m  ,  .  / rsft
    fn lctl lalt lmet spc rmet ralt
  )


(platform (linux)
  (deflayer base
    esc  🔅  🔆 nop0 nop1 nop2 nop3 ◀◀  ▶⏸   ▶▶   🔇   🔉   🔊
    grv   1   2   3   4   5   6   7   8   9   0   -   = del
    tab  q   w   e   r   t   y   u   i   o   p   [   ] \
    @cap @a  @s  @d  @f h @j  @k  @l  @; enter
    lsft z x c v b n m  ,  .  / rsft
    (layer-toggle function) lctl lalt lmet spc rmet ralt
  )
)

(platform (macos)
  (deflayer base
    esc  🔅  🔆 nop0 nop1 nop2 nop3 ◀◀  ▶⏸   ▶▶   🔇   🔉   🔊
    grv   1   2   3   4   5   6   7   8   9   0   -   = del
    tab  q   w   e   r   t   y   u   i   o   p   [   ] \
    @cap @a  @s  @d  @f h @j  @k  @l  @; enter
    lsft z x c v b n m  ,  .  / rsft
    (layer-toggle function) (layer-toggle control) lalt lmet spc rmet ralt
  )
)

(platform (macos)
  (defalias 
    app-ctrl-t (switch
      ((input virtual app.zen-browser.zen)) M-t break
      () C-t break
    )
    app-ctrl-a (switch
      ((input virtual app.zen-browser.zen)) M-a break
      ((input virtual com.tinyspeck.slackmacgap)) M-a break
      () C-a break
    )
    app-ctrl-w (switch
      ((input virtual app.zen-browser.zen)) M-w break
      () C-w break
    )
    app-ctrl-c (switch
      ((input virtual app.zen-browser.zen)) M-c break
      ((input virtual com.tinyspeck.slackmacgap)) M-c break
      () C-c break
    )
    app-ctrl-v (switch
      ((input virtual app.zen-browser.zen)) M-v break
      ((input virtual com.tinyspeck.slackmacgap)) M-v break
      () C-v break
    )
    app-ctrl-z (switch
      ((input virtual app.zen-browser.zen)) M-z break
      ((input virtual com.tinyspeck.slackmacgap)) M-z break
      () C-z break
    )
    app-ctrl-x (switch
      ((input virtual app.zen-browser.zen)) M-x break
      ((input virtual com.tinyspeck.slackmacgap)) M-x break
      () C-x break
    )
    app-ctrl-enter (switch
      ((input virtual app.zen-browser.zen)) M-enter break
      ((input virtual com.tinyspeck.slackmacgap)) M-enter break
      () C-enter break
    )
  )
)



(platform (macos)
  (deflayer control
    _ _ _ _ _ _ _ _ _ _ _ _ _
    C-grv C-1 C-2 C-3 C-4 C-5 C-6 C-7 C-8 C-9 C-0 C-- C-= C-del
    C-tab C-q @app-ctrl-w C-e C-r @app-ctrl-t C-y C-u C-i C-o C-p C-[ C-] C-\
    _ @app-ctrl-a C-s C-d C-f C-h _ _ C-l C-; @app-ctrl-enter
    _ @app-ctrl-z @app-ctrl-x @app-ctrl-c @app-ctrl-v C-b C-n C-m C-, C-. C-/ _
    _ _ _ _ _ _ _
  )
)

(deflayer mouse
  @base _ _ _ _ _ _ _ _ _ _ _ _
    _ _ _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ _ _ _ _ _ _
  @base _ _ _ _ @ms← @ms↓ @ms↑ @ms→ _ @clk
  @fst _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _
)

(deflayer arrows
  _ _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ left down up right _ _
  _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _
)

(deflayer fn
  _ brdn brup  _ _ _ _ prev pp next mute vold volu
  _ _ _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _
)


(deflayer nomods
  esc f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
  grv   1   2   3   4   5   6   7   8   9   0   -   = del
  tab  q   w   e   r   t   y   u   i   o   p   [   ] \
  esc a s d f h j k l ; enter
  lsft z x c v b n m  ,  .  / rsft
  fn lctl lalt lmet spc rmet ralt
)


(platform (linux)
  (defalias
    tap (multi
      (layer-switch nomods)
      (on-idle-fakekey to-base tap 20)
    )

    cap (tap-dance 300 (
      (tap-hold $tap-time $hold-time esc (layer-toggle arrows))
      (layer-switch mouse)
    ))
    a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)
    s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lalt $left-hand-keys)
    d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) lctl $left-hand-keys)
    f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lsft $left-hand-keys)
    j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) rsft $right-hand-keys)
    k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) rctl $right-hand-keys)
    l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) ralt $right-hand-keys)
    ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) rmet $right-hand-keys)

  )
)

(platform (macos)
  (defalias
    tap (multi
      (layer-switch nomods)
      (on-physical-idle 100 tap-vkey to-base)
    )

    cap (tap-dance 300 (
      (tap-hold $tap-time $hold-time esc (layer-toggle arrows))
      (layer-switch mouse)
    ))

    a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)
    s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lalt $left-hand-keys)
    d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) (layer-toggle control) $left-hand-keys)
    f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lsft $left-hand-keys)
    j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) rsft $right-hand-keys)
    k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) (layer-toggle control) $right-hand-keys)
    l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) ralt $right-hand-keys)
    ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) rmet $right-hand-keys)
  )
)


(platform (linux)
  (defvirtualkeys
    to-base (layer-switch base)
  )
)
(platform (macos)
  (defvirtualkeys
    to-base (layer-switch base)
    com.tinyspeck.slackmacgap nop0
    app.zen-browser.zen nop0

    com.apple.keylayout.UnicodeHexInput nop0
  )
)
