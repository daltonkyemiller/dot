(defcfg
  process-unmapped-keys yes

  macos-dev-names-exclude (
    "Corne"
  )

  linux-dev-names-exclude (
    "Corne Keyboard"
  )

)

(defsrc
  f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
  caps a   s   d   f  h  j   k   l   ;
)

(defvar
  tap-time 175
  hold-time 210

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )

  right-hand-keys (
    y u i o p
    h j k l ; enter
    n m , . /
  )
)

;;(defalias
;; fnl (tap-hold 200 200 fn (layer-toggle fn))
;;)

(deflayer base
  f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
  @cap @a  @s  @d  @f h @j  @k  @l  @;
)

(deflayer arrows
  _ _ _ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ left down up right _
)

(deflayer fn
  brdn brup  _ _ _ _ prev pp next mute vold volu
  _ _ _ _ _ _ _ _ _ _
)


(deflayer nomods
  f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12
  esc a s d f h j k l ;
)

(deffakekeys
  to-base (layer-switch base)
)

(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )

  cap (tap-hold $tap-time $hold-time esc (layer-toggle arrows))
  a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) lctl $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lsft $left-hand-keys)
  j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) rsft $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) rctl $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) ralt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) rmet $right-hand-keys)
)
